openapi: 3.0.3
info:
  description: Documentation Nav portal REST API
  version: '0.1'
  title: Nav REST API
servers:
  - url: /rest
paths:
  /Tiles:
    get:
      tags:
        - Tiles
      summary: Tiles
      operationId: Tiles
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tile'
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: Not Found
          content: {}
      deprecated: false
  /ServiceOnArea:
    put:
      tags:
        - ServiceOnArea
      summary: ServiceOnArea
      requestBody:
        description: Legg til en ny tjeneste på et område
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceToArea'
          text/plain:
            schema:
              type: string
      responses:
        '201':
          description: Created
        '403':
          description: Forbidden
          content: { }
        '404':
          description: Not Found
          content: { }
  /ServiceRecord:
    post:
      tags:
        - ServiceRecord
      summary: Legg til status på en tjeneste
      requestBody:
        description: Legg til status på en tjeneste
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
          text/plain:
            schema:
              type: string
      responses:
        '201':
          description: Created
        '403':
          description: Forbidden
          content: { }
        '404':
          description: Not Found
          content: { }

  /Areas:
    get:
      tags:
        - Area
      summary: Mulige områder tjenester kan legges i
      operationId: Area
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Area'
        '401':
          description: Unauthorized
          content: { }
        '403':
          description: Forbidden
          content: { }
        '404':
          description: Not Found
          content: { }
      deprecated: false
    post:
      tags:
        - Area
      summary: Legg til ett nytt område
      requestBody:
        description: Legg til ett nytt område
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Area'
          text/plain:
            schema:
              type: string
      responses:
        '201':
          description: Created
        '403':
          description: Forbidden
          content: { }
        '404':
          description: Not Found
          content: { }

components:
  schemas:
    Tile:
      title: Tile
      type: object
      properties:
        area:
          $ref: '#/components/schemas/Area'
        status:
          $ref: '#/components/schemas/Status'
        services:
          type: array
          items:
            $ref: '#/components/schemas/Service'
    Dashboard:
      title: Dashboard
      type: object
      properties:
        name:
          type: string
        areas:
          type: array
          items:
            $ref: '#/components/schemas/Area'
    ServiceToArea:
      title: ServiceToArea
      type: object
      properties:
        areaId:
          type: string
          format: uuid
        serviceId:
          type: string
          format: uuid
    Area:
      title: Area
      type: object
      properties:
        name:
          type: string
        id:
          type: string
          format: uuid
        beskrivelse:
          type: string
        ikon:
          type: string
        servisesIds:
          type: array
          items:
            type: string
    Service:
      title: Service
      type: object
      properties:
        name:
          type: string
        id:
          type: string
          format: uuid
        type:
          $ref: '#/components/schemas/ServiceType'
        team:
          type: string
        dependencies:
          type: array
          items:
            $ref: '#/components/schemas/Service'
        monitorlink:
          type: string
        description:
          type: string
        logglink:
          type: string
        status:
          $ref: '#/components/schemas/Status'
    ServiceStatus:
      title: ServiceStatus
      type: object
      properties:
        serviceId:
          type: string
        name:
          type: string
        status:
          $ref: '#/components/schemas/Status'

    Status:
      type: string
      enum:
        - OK
        - ISSUE
        - DOWN
    ServiceType:
      type: string
      enum:
        - APPLIKASJON
        - TJENESTE
